
//----------------------------------------------------
// The following code was generated by C# CUP v0.1
// 18/05/2017 17:27:49
//----------------------------------------------------

namespace TypeCobol.DocumentModel.Dom.Parser
 {

/** CUP generated class containing symbol constants. */
public class ProgramSymbols {
  /* terminals */
  public const int DataRenamesEntry = 31;
  public const int DeleteStatement = 47;
  public const int MoveStatement = 63;
  public const int FunctionDeclarationEnd = 123;
  public const int PerformProcedureStatement = 67;
  public const int FactoryEnd = 7;
  public const int ReadStatementEnd = 111;
  public const int ReturnStatementEnd = 112;
  public const int WhenSearchCondition = 100;
  public const int LocalStorageSectionHeader = 22;
  public const int SectionHeader = 17;
  public const int ObjectComputerParagraph = 36;
  public const int MethodIdentification = 10;
  public const int LinkageSectionHeader = 23;
  public const int WorkingStorageSectionHeader = 21;
  public const int ReleaseStatement = 70;
  public const int WhenCondition = 98;
  public const int XmlGenerateStatement = 83;
  public const int NotOnExceptionCondition = 90;
  public const int AtEndCondition = 85;
  public const int ExecStatement = 52;
  public const int AddStatement = 40;
  public const int StringStatement = 78;
  public const int EnvironmentDivisionHeader = 12;
  public const int CallStatementEnd = 102;
  public const int DataRedefinesEntry = 30;
  public const int NotInvalidKeyCondition = 94;
  public const int EvaluateStatementEnd = 106;
  public const int MultiplyStatement = 64;
  public const int InspectStatement = 60;
  public const int SpecialNamesParagraph = 37;
  public const int MethodEnd = 11;
  public const int WhenOtherCondition = 99;
  public const int CallStatement = 42;
  public const int AddStatementEnd = 101;
  public const int UseStatement = 81;
  public const int PerformStatementEnd = 110;
  public const int InvokeStatementEnd = 108;
  public const int IfStatementEnd = 107;
  public const int CancelStatement = 43;
  public const int ParagraphHeader = 24;
  public const int SubtractStatement = 79;
  public const int CloseStatement = 44;
  public const int StartStatementEnd = 115;
  public const int ConfigurationSectionHeader = 18;
  public const int IOControlParagraphHeader = 26;
  public const int OnExceptionCondition = 89;
  public const int ObjectEnd = 9;
  public const int StopStatement = 77;
  public const int InvalidKeyCondition = 93;
  public const int error = 1;
  public const int SentenceEnd = 27;
  public const int InputOutputSectionHeader = 19;
  public const int FileControlParagraphHeader = 25;
  public const int WriteStatementEnd = 119;
  public const int RewriteStatement = 72;
  public const int AtEndOfPageCondition = 87;
  public const int DisplayStatement = 48;
  public const int SubtractStatementEnd = 117;
  public const int DeleteStatementEnd = 104;
  public const int MultiplyStatementEnd = 109;
  public const int ClassIdentification = 4;
  public const int OpenStatement = 66;
  public const int ClassEnd = 5;
  public const int XmlStatementEnd = 120;
  public const int NextSentenceStatement = 65;
  public const int ExitProgramStatement = 54;
  public const int InvokeStatement = 61;
  public const int FileControlEntry = 33;
  public const int IOControlEntry = 34;
  public const int ProcedureStyleCall = 124;
  public const int DeclarativesHeader = 15;
  public const int EvaluateStatement = 51;
  public const int WriteStatement = 82;
  public const int UnstringStatement = 80;
  public const int UnstringStatementEnd = 118;
  public const int SourceComputerParagraph = 35;
  public const int FactoryIdentification = 6;
  public const int PerformStatement = 68;
  public const int MergeStatement = 62;
  public const int FunctionDeclarationHeader = 122;
  public const int InitializeStatement = 59;
  public const int ComputeStatementEnd = 103;
  public const int ObjectIdentification = 8;
  public const int LibraryCopy = 121;
  public const int ProgramEnd = 3;
  public const int SortStatement = 75;
  public const int FileDescriptionEntry = 28;
  public const int DataDescriptionEntry = 29;
  public const int ExitMethodStatement = 53;
  public const int GobackStatement = 56;
  public const int SetStatement = 74;
  public const int NotAtEndCondition = 86;
  public const int OnOverflowCondition = 91;
  public const int AcceptStatement = 39;
  public const int ProgramIdentification = 2;
  public const int DeclarativesEnd = 16;
  public const int DivideStatementEnd = 105;
  public const int ElseCondition = 97;
  public const int RepositoryParagraph = 38;
  public const int DataDivisionHeader = 13;
  public const int StartStatement = 76;
  public const int XmlParseStatement = 84;
  public const int EntryStatement = 50;
  public const int ProcedureDivisionHeader = 14;
  public const int OnSizeErrorCondition = 95;
  public const int SearchStatementEnd = 114;
  public const int ContinueStatement = 46;
  public const int FileSectionHeader = 20;
  public const int GotoStatement = 57;
  public const int NotOnOverflowCondition = 92;
  public const int DataConditionEntry = 32;
  public const int RewriteStatementEnd = 113;
  public const int ComputeStatement = 45;
  public const int Program = 125;
  public const int SearchStatement = 73;
  public const int DivideStatement = 49;
  public const int NotOnSizeErrorCondition = 96;
  public const int StringStatementEnd = 116;
  public const int ReturnStatement = 71;
  public const int IfStatement = 58;
  public const int ExitStatement = 55;
  public const int EOF = 0;
  public const int AlterStatement = 41;
  public const int NotAtEndOfPageCondition = 88;
  public const int ReadStatement = 69;
	}
}
