using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading.Tasks;

namespace TypeCobol.Compiler.Scanner
{
    // WARNING : both enumerations below (families / types) must stay in sync
    // WARNING : make sure to update the tables in TokenUtils if you add one more token family or one more token type

    public enum TokenFamily
    {
        //          0 : Error
        Invalid=0,
        //   1 ->   3 : Whitespace
        // p46: The separator comma and separator semicolon can
        // be used anywhere the separator space is used.
        Whitespace=1,
        //   4 ->   5 : Comments
        Comments=4,
        // 6 ->  10 : Separators - Syntax
        SyntaxSeparator=6,
        //  11 ->  15 : Special character word - Arithmetic operators
        ArithmeticOperator=11,
        //  16 ->  20 : Special character word - Relational operators
        RelationalOperator=16,
        //  21 ->  26 : Literals - Alphanumeric
        AlphanumericLiteral=21,
        //  27 ->  29 : Literals - Numeric 
        NumericLiteral=27,
        //  30 ->  32 : Literals - Syntax tokens
        SyntaxLiteral=30,
        //  33 ->  36 : Symbols
        Symbol=33,
        //  37 ->  55 : Keywords - Compiler directive starting tokens
        CompilerDirectiveStartingKeyword=37,
        //  56 ->  78 : Keywords - Code element starting tokens
        CodeElementStartingKeyword=56,
        //  79 ->  119: Keywords - Statement starting tokens
        StatementStartingKeyword=79,
        //  120 -> 140 : Keywords - Statement ending tokens
        StatementEndingKeyword=120,
        // 141 -> 171 : Keywords - Special registers
        SpecialRegisterKeyword=141,
        // 172 -> 185 : Keywords - Figurative constants
        FigurativeConstantKeyword=172,
        // 186 -> 187 : Keywords - Special object identifiers
        SpecialObjetIdentifierKeyword=186,
        // 188 -> 447 : Keywords - Syntax tokens
        SyntaxKeyword=188,
        // 448 -> 449 : Keywords - Cobol 2002
        Cobol2002Keyword = 448,
        // 450 -> 455 : Keywords - TypeCobol
        TypeCobolKeyword = 450,
        // 456 -> 458 : Compiler directives
        CompilerDirective = 456,
        // 459 -> 459 : Internal token groups - used by the preprocessor only
        InternalTokenGroup = 459
    }

    // INFO : the list below is generated from the file Documentation/Studies/CobolLexer.tokens.xls
    // WARNING : the list of tokens in CobolWords.g4 must stay in sync

    public enum TokenType
    {
        EndOfFile = -1,
        // Error
        InvalidToken = 0,
        // Separators - Whitespace
        SpaceSeparator = 1,
        CommaSeparator = 2,
        SemicolonSeparator = 3,
        // Comments
        FloatingComment = 4,
        CommentLine = 5,
        // Separators - Syntax
        PeriodSeparator = 6,
        ColonSeparator = 7,
        LeftParenthesisSeparator = 8,
        RightParenthesisSeparator = 9,
        PseudoTextDelimiter = 10,
        // Special character word - Arithmetic operators
        PlusOperator = 11,
        MinusOperator = 12,
        DivideOperator = 13,
        MultiplyOperator = 14,
        PowerOperator = 15,
        // Special character word - Relational operators
        LessThanOperator = 16,
        GreaterThanOperator = 17,
        LessThanOrEqualOperator = 18,
        GreaterThanOrEqualOperator = 19,
        EqualOperator = 20,
        // Literals - Alphanumeric
        AlphanumericLiteral = 21,
        HexadecimalAlphanumericLiteral = 22,
        NullTerminatedAlphanumericLiteral = 23,
        NationalLiteral = 24,
        HexadecimalNationalLiteral = 25,
        DBCSLiteral = 26,
        // Literals - Numeric
        IntegerLiteral = 27,
        DecimalLiteral = 28,
        FloatingPointLiteral = 29,
        // Literals - Syntax tokens
        PictureCharacterString = 30,
        CommentEntry = 31,
        ExecStatementText = 32,
        // Symbols
        IntrinsicFunctionName = 33,
        ExecTranslatorName = 34,
        PartialCobolWord = 35,
        UserDefinedWord = 36,
        // Keywords - Compiler directive starting tokens
        ASTERISK_CBL = 37,
        ASTERISK_CONTROL = 38,
        BASIS = 39,
        CBL = 40,
        COPY = 41,
        DELETE_CD = 42,
        EJECT = 43,
        ENTER = 44,
        EXEC_SQL_INCLUDE = 45,
        INSERT = 46,
        PROCESS = 47,
        READY = 48,
        RESET = 49,
        REPLACE = 50,
        SERVICE_CD = 51,
        SKIP1 = 52,
        SKIP2 = 53,
        SKIP3 = 54,
        TITLE = 55,
        // Keywords - Code element starting tokens
        APPLY = 56,
        CONFIGURATION = 57,
        ELSE = 58,
        ENVIRONMENT = 59,
        FD = 60,
        FILE_CONTROL = 61,
        I_O_CONTROL = 62,
        ID = 63,
        IDENTIFICATION = 64,
        INPUT_OUTPUT = 65,
        LINKAGE = 66,
        LOCAL_STORAGE = 67,
        MULTIPLE = 68,
        OBJECT_COMPUTER = 69,
        REPOSITORY = 70,
        RERUN = 71,
        SAME = 72,
        SD = 73,
        SELECT = 74,
        SOURCE_COMPUTER = 75,
        SPECIAL_NAMES = 76,
        USE = 77,
        WORKING_STORAGE = 78,
        // Keywords - Statement starting tokens
        ACCEPT = 79,
        ADD = 80,
        ALTER = 81,
        CALL = 82,
        CANCEL = 83,
        CLOSE = 84,
        COMPUTE = 85,
        CONTINUE = 86,
        DELETE = 87,
        DISPLAY = 88,
        DIVIDE = 89,
        ENTRY = 90,
        EVALUATE = 91,
        EXEC = 92,
        EXECUTE = 93,
        EXIT = 94,
        GOBACK = 95,
        GO = 96,
        IF = 97,
        INITIALIZE = 98,
        INSPECT = 99,
        INVOKE = 100,
        MERGE = 101,
        MOVE = 102,
        MULTIPLY = 103,
        OPEN = 104,
        PERFORM = 105,
        READ = 106,
        RELEASE = 107,
        RETURN = 108,
        REWRITE = 109,
        SEARCH = 110,
        SET = 111,
        SORT = 112,
        START = 113,
        STOP = 114,
        STRING = 115,
        SUBTRACT = 116,
        UNSTRING = 117,
        WRITE = 118,
        XML = 119,
        // Keywords - Statement ending tokens
        END_ADD = 120,
        END_CALL = 121,
        END_COMPUTE = 122,
        END_DELETE = 123,
        END_DIVIDE = 124,
        END_EVALUATE = 125,
        END_EXEC = 126,
        END_IF = 127,
        END_INVOKE = 128,
        END_MULTIPLY = 129,
        END_PERFORM = 130,
        END_READ = 131,
        END_RETURN = 132,
        END_REWRITE = 133,
        END_SEARCH = 134,
        END_START = 135,
        END_STRING = 136,
        END_SUBTRACT = 137,
        END_UNSTRING = 138,
        END_WRITE = 139,
        END_XML = 140,
        // Keywords - Special registers
        ADDRESS = 141,
        DEBUG_CONTENTS = 142,
        DEBUG_ITEM = 143,
        DEBUG_LINE = 144,
        DEBUG_NAME = 145,
        DEBUG_SUB_1 = 146,
        DEBUG_SUB_2 = 147,
        DEBUG_SUB_3 = 148,
        JNIENVPTR = 149,
        LENGTH = 150,
        LINAGE_COUNTER = 151,
        RETURN_CODE = 152,
        SHIFT_IN = 153,
        SHIFT_OUT = 154,
        SORT_CONTROL = 155,
        SORT_CORE_SIZE = 156,
        SORT_FILE_SIZE = 157,
        SORT_MESSAGE = 158,
        SORT_MODE_SIZE = 159,
        SORT_RETURN = 160,
        TALLY = 161,
        WHEN_COMPILED = 162,
        XML_CODE = 163,
        XML_EVENT = 164,
        XML_INFORMATION = 165,
        XML_NAMESPACE = 166,
        XML_NAMESPACE_PREFIX = 167,
        XML_NNAMESPACE = 168,
        XML_NNAMESPACE_PREFIX = 169,
        XML_NTEXT = 170,
        XML_TEXT = 171,
        // Keywords - Figurative constants
        HIGH_VALUE = 172,
        HIGH_VALUES = 173,
        LOW_VALUE = 174,
        LOW_VALUES = 175,
        NULL = 176,
        NULLS = 177,
        QUOTE = 178,
        QUOTES = 179,
        SPACE = 180,
        SPACES = 181,
        ZERO = 182,
        ZEROES = 183,
        ZEROS = 184,
        SymbolicCharacter = 185,
        // Keywords - Special object identifiers
        SELF = 186,
        SUPER = 187,
        // Keywords - Syntax tokens
        ACCESS = 188,
        ADVANCING = 189,
        AFTER = 190,
        ALL = 191,
        ALPHABET = 192,
        ALPHABETIC = 193,
        ALPHABETIC_LOWER = 194,
        ALPHABETIC_UPPER = 195,
        ALPHANUMERIC = 196,
        ALPHANUMERIC_EDITED = 197,
        ALSO = 198,
        ALTERNATE = 199,
        AND = 200,
        ANY = 201,
        ARE = 202,
        AREA = 203,
        AREAS = 204,
        ASCENDING = 205,
        ASSIGN = 206,
        AT = 207,
        ATTRIBUTE = 208,
        ATTRIBUTES = 209,
        AUTHOR = 210,
        BEFORE = 211,
        BEGINNING = 212,
        BINARY = 213,
        BLANK = 214,
        BLOCK = 215,
        BOTTOM = 216,
        BY = 217,
        CHARACTER = 218,
        CHARACTERS = 219,
        CLASS = 220,
        CLASS_ID = 221,
        COBOL = 222,
        CODE = 223,
        CODE_SET = 224,
        COLLATING = 225,
        COM_REG = 226,
        COMMA = 227,
        COMMON = 228,
        COMP = 229,
        COMP_1 = 230,
        COMP_2 = 231,
        COMP_3 = 232,
        COMP_4 = 233,
        COMP_5 = 234,
        COMPUTATIONAL = 235,
        COMPUTATIONAL_1 = 236,
        COMPUTATIONAL_2 = 237,
        COMPUTATIONAL_3 = 238,
        COMPUTATIONAL_4 = 239,
        COMPUTATIONAL_5 = 240,
        CONTAINS = 241,
        CONTENT = 242,
        CONVERTING = 243,
        CORR = 244,
        CORRESPONDING = 245,
        COUNT = 246,
        CURRENCY = 247,
        DATA = 248,
        DATE = 249,
        DATE_COMPILED = 250,
        DATE_WRITTEN = 251,
        DAY = 252,
        DAY_OF_WEEK = 253,
        DBCS = 254,
        DEBUGGING = 255,
        DECIMAL_POINT = 256,
        DECLARATIVES = 257,
        DELIMITED = 258,
        DELIMITER = 259,
        DEPENDING = 260,
        DESCENDING = 261,
        DISPLAY_1 = 262,
        DIVISION = 263,
        DOWN = 264,
        DUPLICATES = 265,
        DYNAMIC = 266,
        EBCDIC = 267,
        EGCS = 268,
        ELEMENT = 269,
        ENCODING = 270,
        END = 271,
        END_OF_PAGE = 272,
        ENDING = 273,
        EOP = 274,
        EQUAL = 275,
        ERROR = 276,
        EVERY = 277,
        EXCEPTION = 278,
        EXTEND = 279,
        EXTERNAL = 280,
        FACTORY = 281,
        FALSE = 282,
        FILE = 283,
        FILLER = 284,
        FIRST = 285,
        FOOTING = 286,
        FOR = 287,
        FROM = 288,
        FUNCTION = 289,
        FUNCTION_POINTER = 290,
        GENERATE = 291,
        GIVING = 292,
        GLOBAL = 293,
        GREATER = 294,
        GROUP_USAGE = 295,
        I_O = 296,
        IN = 297,
        INDEX = 298,
        INDEXED = 299,
        INHERITS = 300,
        INITIAL = 301,
        INPUT = 302,
        INSTALLATION = 303,
        INTO = 304,
        INVALID = 305,
        IS = 306,
        JUST = 307,
        JUSTIFIED = 308,
        KANJI = 309,
        KEY = 310,
        LABEL = 311,
        LEADING = 312,
        LEFT = 313,
        LESS = 314,
        LINAGE = 315,
        LINE = 316,
        LINES = 317,
        LOCK = 318,
        MEMORY = 319,
        METHOD = 320,
        METHOD_ID = 321,
        MODE = 322,
        MODULES = 323,
        MORE_LABELS = 324,
        NAME = 325,
        NAMESPACE = 326,
        NAMESPACE_PREFIX = 327,
        NATIONAL = 328,
        NATIONAL_EDITED = 329,
        NATIVE = 330,
        NEGATIVE = 331,
        NEW = 332,
        NEXT = 333,
        NO = 334,
        NONNUMERIC = 335,
        NOT = 336,
        NUMERIC = 337,
        NUMERIC_EDITED = 338,
        OBJECT = 339,
        OCCURS = 340,
        OF = 341,
        OFF = 342,
        OMITTED = 343,
        ON = 344,
        OPTIONAL = 345,
        OR = 346,
        ORDER = 347,
        ORGANIZATION = 348,
        OTHER = 349,
        OUTPUT = 350,
        OVERFLOW = 351,
        OVERRIDE = 352,
        PACKED_DECIMAL = 353,
        PADDING = 354,
        PAGE = 355,
        PARSE = 356,
        PASSWORD = 357,
        PIC = 358,
        PICTURE = 359,
        POINTER = 360,
        POSITION = 361,
        POSITIVE = 362,
        PROCEDURE = 363,
        PROCEDURE_POINTER = 364,
        PROCEDURES = 365,
        PROCEED = 366,
        PROCESSING = 367,
        PROGRAM = 368,
        PROGRAM_ID = 369,
        RANDOM = 370,
        RECORD = 371,
        RECORDING = 372,
        RECORDS = 373,
        RECURSIVE = 374,
        REDEFINES = 375,
        REEL = 376,
        REFERENCE = 377,
        REFERENCES = 378,
        RELATIVE = 379,
        RELOAD = 380,
        REMAINDER = 381,
        REMOVAL = 382,
        RENAMES = 383,
        REPLACING = 384,
        RESERVE = 385,
        RETURNING = 386,
        REVERSED = 387,
        REWIND = 388,
        RIGHT = 389,
        ROUNDED = 390,
        RUN = 391,
        SECTION = 392,
        SECURITY = 393,
        SEGMENT_LIMIT = 394,
        SENTENCE = 395,
        SEPARATE = 396,
        SEQUENCE = 397,
        SEQUENTIAL = 398,
        SERVICE = 399,
        SIGN = 400,
        SIZE = 401,
        SORT_MERGE = 402,
        SQL = 403,
        SQLIMS = 404,
        STANDARD = 405,
        STANDARD_1 = 406,
        STANDARD_2 = 407,
        STATUS = 408,
        SUPPRESS = 409,
        SYMBOL = 410,
        SYMBOLIC = 411,
        SYNC = 412,
        SYNCHRONIZED = 413,
        TALLYING = 414,
        TAPE = 415,
        TEST = 416,
        THAN = 417,
        THEN = 418,
        THROUGH = 419,
        THRU = 420,
        TIME = 421,
        TIMES = 422,
        TO = 423,
        TOP = 424,
        TRACE = 425,
        TRAILING = 426,
        TRUE = 427,
        TYPE = 428,
        UNBOUNDED = 429,
        UNIT = 430,
        UNTIL = 431,
        UP = 432,
        UPON = 433,
        USAGE = 434,
        USING = 435,
        VALIDATING = 436,
        VALUE = 437,
        VALUES = 438,
        VARYING = 439,
        WHEN = 440,
        WITH = 441,
        WORDS = 442,
        WRITE_ONLY = 443,
        XML_DECLARATION = 444,
        XML_SCHEMA = 445,
        YYYYDDD = 446,
        YYYYMMDD = 447,
        // Keywords - Cobol 2002
        TYPEDEF = 448,
        STRONG = 449,
        // Keywords - TypeCobol
        DECLARE = 450,
        END_DECLARE = 451,
        UNSAFE = 452,
        PUBLIC = 453,
        PRIVATE = 454,
        INOUT = 455,
        // Group of tokens produced by the preprocessor
        // - compiler directives
        CompilerDirective = 456,
        CopyImportDirective = 457,
        ReplaceDirective = 458,
        // - internal token groups -> used by the preprocessor only
        ContinuationTokenGroup = 459
    }
}
